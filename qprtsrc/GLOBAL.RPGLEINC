**free
/if defined(GLOBAL_H_DEFINED)
/eof
/endif
/define GLOBAL_H_DEFINED

dcl-c GLOBAL_ITEM 9999;
dcl-c GLOBAL_DEV 'D';
dcl-c GLOBAL_RECETTE 'T';
dcl-c GLOBAL_PROD 'P';
dcl-s GLOBAL_longueVariable varchar(256) template;
dcl-s GLOBAL_codeAction varchar(32) template;
dcl-s GLOBAL_cOkKo char(1) template;
dcl-c GLOBAL_MAX_ERROR 100;
dcl-s GLOBAL_id int(10);
dcl-c GLOBAL_QUOTE '''';

// https://www.rpgpgm.com/2019/06/new-subfields-added-to-program-status.html
dcl-ds GLOBAL_Pgm psds qualified ;
  Proc char(10) ;             // Module or main procedure name
  StsCde zoned(5) ;           // Status code
  PrvStsCde zoned(5) ;        // Previous status
  SrcLineNbr char(8) ;        // Source line number
  Routine char(8) ;           // Name of the RPG routine
  Parms zoned(3) ;            // Number of parms passed to program
  ExceptionType char(3) ;     // Exception type
  ExceptionNbr char(4) ;      // Exception number
  Exception char(7) samepos(ExceptionType) ;
  Reserved1 char(4) ;         // Reserved
  MsgWrkArea char(30) ;       // Message work area
  PgmLib char(10) ;           // Program library
  ExceptionData char(80) ;    // Retrieved exception data
  Rnx9001Exception char(4) ;  // Id of exception that caused RNX9001
  LastFile1 char(10) ;        // Last file operation occurred on
  Unused1 char(6) ;           // Unused
  DteEntered char(8) ;        // Date entered system
  StrDteCentury zoned(2) ;    // Century of job started date
  LastFile2 char(8) ;         // Last file operation occurred on
  LastFileSts char(35) ;      // Last file used status information
  JobName char(10) ;          // Job name
  JobUser char(10) ;          // Job user
  JobNbr zoned(6) ;           // Job number
  StrDte zoned(6) ;           // Job started date
  PgmDte zoned(6) ;           // Date of program running
  PgmTime zoned(6) ;          // Time of program running
  CompileDte char(6) ;        // Date program was compiled
  CompileTime char(6) ;       // Time program was compiled
  CompilerLevel char(4) ;     // Level of compiler
  SrcFile char(10) ;          // Source file name
  SrcLib char(10) ;           // Source file library
  SrcMbr char(10) ;           // Source member name
  ProcPgm char(10) ;          // Program containing procedure
  ProcMod char(10) ;          // Module containing procedure
  SrcLineNbrBin bindec(2) ;   // Source line number as binary
  LastFileStsBin bindec(2) ;  // Source id matching positions 228-235
  User char(10) ;             // Current user
  ExtErrCode int(10) ;        // External error code
  IntoElements int(20) ;      // Elements set by XML-INTO or DATA-INTO (7.3)
  InternalJobId char(16) ;    // Internal job id (7.3 TR6)
  SysName char(8) ;           // System name (7.3 TR6)
end-ds ;
// ------------------------------------------------------------------//
// printf (c)                                                       //
// ------------------------------------------------------------------//
dcl-ds GLOBAL_listeError template qualified;
  dcl-ds errorItem dim(100);
    nomZone char(32);
    code char(7);
    text like(GLOBAL_longueVariable);
    textUser  like(GLOBAL_longueVariable);
  end-ds;
end-ds;


dcl-ds errorItem template qualified;
  nomZone char(32);
  code char(7);
  valeur like(GLOBAL_longueVariable);
  text like(GLOBAL_longueVariable);
  textUser  like(GLOBAL_longueVariable);
end-ds;
dcl-ds GLOBAL_listError template qualified;
  dcl-ds listError likeDS(errorItem) dim(GLOBAL_MAX_ERROR);
end-ds;
dcl-ds GLOBAL_pagination template qualified;
  start int(10);
  end int(10);
end-ds;
dcl-ds GLOBAL_sort template qualified;
  field char(32);
  order char(32);
end-ds;
dcl-ds GLOBAL_filter template qualified;
  field char(32);
  value char(32);
end-ds;

dcl-ds GLOBAL_Context template qualified;
  dcl-ds pagination likeDS(GLOBAL_pagination);
  dcl-ds sort likeDS(GLOBAL_sort) dim(10);
  dcl-ds filter likeDS(GLOBAL_filter) dim(10);
end-ds;

dcl-pr GLOBAL_getEnvironnement extpgm('STRENVPTD');
  environnement char(1);
end-pr;
//
dcl-pr GLOBAL_envoieMessageMail extpgm('CRETXTMAI');
  destinataire char(70);
  objet char(60);
  texte char(400);
end-pr;











